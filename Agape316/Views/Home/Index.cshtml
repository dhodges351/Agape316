@using Microsoft.AspNetCore.Identity
@inject SignInManager<Agape316.Data.ApplicationUser> SignInManager
@inject UserManager<Agape316.Data.ApplicationUser> UserManager
@model Agape316.Models.HomeIndexModel

@if (SignInManager.IsSignedIn(User))
{
    <input type="hidden" id="logged" value="true" />
}
else
{
    <input type="hidden" id="logged" value="false" />
}
@if (User.IsInRole("Admin"))
{
    <input type="hidden" id="admin" value="true" />
}
else
{
    <input type="hidden" id="admin" value="false" />
}

@{
    ViewData["Title"] = "Home Page";
}

<!-- Navbar & Hero Start --> 
<div class="container-xxl top-container bg-dark">    
    <div class="container top-inner-container"> 
        <div class="row align-items-start">
            <div class="col-md-12">
                <p class="mainPara">
                    <span class="welcome">Welcome</span> to Sand Ridge Baptist Church Agape Ministry in Lexington, TN!
                    Our mission is to provide service opportunities for people to demonstrate 
                    God's agape love for His children as written in John 3:16: 
                    <span class="scripture-316">"For God so loved the world, that he gave his only begotten Son, that whosoever believeth in
                        him should not perish, but have everlasting life."
                    </span>
                </p>
            </div>            
        </div>
        
        <div class="row align-items-start">
            <form asp-controller="Search" asp-action="Search" method="post" role="form" id="homeSearchForm">
                <input asp-for="SearchQuery" id="txtSearch" type="text" class="homeSearch" placeholder="Search..." onfocus="clearThis(this)" />
                <button type="submit" class="btn btn-forumSearch" onclick="return checkEntry()">
                    <i class="material-icons">search</i>
                </button>
            </form>
        </div>
        <div class="row gx-4">
            <div class="col-lg-6 text-center py-4">
                <div>
                    <p class="header-inner-left">
                        
                    </p>
                    <a href="#" onclick="showPlanEventModal()" class="btn btn-primary py-sm-3 px-sm-5 me-3">Plan An Event</a>
                </div>
            </div>
            <div class="col-lg-6 text-center py-4">
                <div>
                    <p class="header-inner-right">
                    </p>
                    <a href="#" onclick="showEventDishModal()" class="btn btn-primary py-sm-3 px-sm-5 me-3">Bring A Dish</a>
                </div>
            </div>
        </div>
        <div class="row gx-4">
            <div class="col-lg-6 text-center py-4">
                <div>
                    <p class="header2-inner-left">

                    </p>
                    <a href="#" onclick="showScheduleMealsModal()" class="btn btn-primary py-sm-3 px-sm-5 me-3">Schedule Meals</a>
                    @*<a rel="noopener" href="#schedule-meals" class="btn btn-primary py-sm-3 px-sm-5 me-3">Schedule Meals</a>*@
                </div>
            </div>
            <div class="col-lg-6 text-center py-4">
                <div>
                    <p class="header2-inner-right">
                    </p>
                    <a href="#" onclick="showDeliverMealsModal()" class="btn btn-primary py-sm-3 px-sm-5 me-3">Deliver Meals</a>
                    @*<a rel="noopener" href="#deliver-meals" class="btn btn-primary py-sm-3 px-sm-5 me-3">Deliver Meals</a>*@
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Navbar & Hero End -->
<div class="modal fade" id="planEventModal" tabindex="-1" aria-labelledby="planEventModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content rounded-0 eventModalContent">
            <div class="modal-header eventModalHeader">
                <h5 class="modal-title" id="planEventModalLabel">Plan Event</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">                
                @await Component.InvokeAsync("Event")  
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="eventDishModal" tabindex="-1" aria-labelledby="eventDishModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content rounded-0 eventModalContent" style="min-width:475px;">
            <div class="modal-header eventModalHeader">
                <h5 class="modal-title" id="eventDishModalLabel">Bring a Dish</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @await Component.InvokeAsync("EventDish")                 
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="scheduleMealsModal" tabindex="-1" aria-labelledby="scheduleMealsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content rounded-0 scheduleMealsModalContent" style="min-width:475px;">
            <div class="modal-header eventModalHeader">
                <h5 class="modal-title" id="scheduleMealsModalLabel">Schedule Meals</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @await Component.InvokeAsync("MealSchedule")
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deliverMealsModal" tabindex="-1" aria-labelledby="deliverMealsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content rounded-0 deliverMealsModalContent" style="min-width:475px;">
            <div class="modal-header eventModalHeader">
                <h5 class="modal-title" id="deliverMealsModalLabel">Deliver Meals</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h1>Deliver Meals Content</h1>
            </div>
        </div>
    </div>
</div>
<!-- Service Start -->
<div class="container-xxl py-3">
    <h5 class="sub-heading">Latest Events</h5>
    @await Component.InvokeAsync("EventList")    
</div>
<div class="container-xxl py-3">
    <h5 class="sub-heading">Latest Dishes</h5>
    @await Component.InvokeAsync("EventDishList")
</div>
<!-- Service End -->

<!-- Schedule Meals Start -->
<div class="container-xxl py-3">
    <h5 class="sub-heading">Meals Scheduled</h5>
    @await Component.InvokeAsync("MealScheduleList")
	@*<div class="row">
        <div class="col-md-12">
           <a id="schedule-meals">Schedule Meals Here</a>
        </div>
	</div>*@
</div>
<!-- Schedule Meals End -->

<!-- Deliver Meals Start -->
<div class="container-xxl py-3">
    <h5 class="sub-heading">Meals Delivered</h5>
    <div class="row">
        <div class="col-md-12">
            @*<a id="deliver-meals">Deliver Meals Here</a>*@
        </div>
    </div>
</div>
<!-- Deliver Meals End -->


<script>
    var isLoggedIn = false;
    var isAdmin = false;   

    function checkEntry()
    {        
        var searchVal = $("#txtSearch").val();
        if (searchVal == "")
        {
            return false;
        }
        else
        {
            $("#homeSearchForm").submit;
        }
    }

    function clearThis(target) {
            target.value = "";
    }

    function checkLoggedIn() {
        var signed = $('#logged').val();

        if (signed === 'true') {
            isLoggedIn = true;
        }        
    }

    function checkAdmin() {
        var admin = $('#admin').val();

        if (admin === 'true') {
            isAdmin = true;
        }
    }

    function showPlanEventModal()
    {        
        checkLoggedIn();
        //checkAdmin();

        if (!isLoggedIn) {
            alert('You must be an logged in to use this feature.')
        }
        //else if (isLoggedIn && !isAdmin) {
        //    alert('You must be an Admin to use this feature.')
        //}
        else
        {
            $("#planEventModal").modal("show");
        }        
    }

    function showEventDishModal() {    
        checkLoggedIn();

        if (!isLoggedIn) {
            alert('You must be an logged in to use this feature.')
        }        
        else {
            $("#eventDishModal").modal("show");
        }
    }    

    function showScheduleMealsModal() {    
        checkLoggedIn();

        if (!isLoggedIn) {
            alert('You must be an logged in to use this feature.')
        }        
        else {
            $("#scheduleMealsModal").modal("show");
        }
    }    

    function showDeliverMealsModal() {
        checkLoggedIn();

        if (!isLoggedIn) {
            alert('You must be an logged in to use this feature.')
        }
        else {
            $("#deliverMealsModal").modal("show");
        }
    }
    

</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
